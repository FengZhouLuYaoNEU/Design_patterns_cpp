以下情况使用Decorator模式
1：在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责
2：处理那些可以撤销的职责
3：当不能采用生成子类的方法进行扩充时。一种情况是，可能有大量独立的扩展，为支持每一种组合将产生大量的子类，使得子类数目呈爆炸性增长。另一种情况可能是因为类定义被隐藏，或类定义不能用于生成子类

与Adapter模式不同
因为装饰仅改变对象的职责而不改变它的接口，而适配器将给对象一个全新的接口
